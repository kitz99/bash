echo ~-  ====> pwd

touch {file1, file2, file3, file4} ===> creeaza toate fisierele deodata. [brace expantion]

touch file-{1..1000} ===> creeaza 1000 de fisiere noi numite file-1 ... file-1000

echo {1..10..x} -- toate numerele intre 1 si 10 din x in x

ls -1 | wc -l ===> Numarul de intrari dintr-un director

cp -v - copiere verbose

cp -v [ce vreau sa copiez] [unde vreau sa copiez] 1> succes.txt 2>error.txt ==> face copierea si pune in succes.txt info despre fis copiate corect si in error.txt info despre erori

ping -c 2 example.com | grep 'bytes from' | cut -d = -f 4  ===> afiseaza doar timpul de raspund in urma pingului care a trimis 2 pachete.

-----------------------------------------------------------------------------------------------------------------------------------------
					SINTAXA BASH SCRIPTING
-----------------------------------------------------------------------------------------------------------------------------------------

#!/bin/bash         ---> asa incepe fiecare script
# comentariu        ---> comentariu

********* Build-in variables *********
$HOME               ---> returneaza path catre home
$PWD                ---> returneaza directorul curent
$MACHTYPE           ---> returnreaza tipul masinii
$HOSTNAME           ---> returneaza hostul
$BASH_VERSION       ---> returneaza versiunea bash
$SECONDS            ---> returneaza numarul de secunde de cand ruleaza sesiunea de bash
$0                  ---> numele scriptului
http://tldp.org/LDP/abs/html/internalvariables.html  ---> documentatie despre variabile interne

Pentru calcule matematice:
		val = $(( expresion ))

Pentru comparatii 
		[[ expresion ]]  - 0 pentru succes si 1 pentru insucces
		pentru comparare de numere:
			<  --> -lt
            >  --> -gt
            <= --> -le
            >= --> -ge
            == --> -eq
            != --> -ne
        is null     --> [[ -z $a ]]
        is not null --> [[ -n $a ]] 




